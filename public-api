{
    "openapi": "3.0.2",
    "info": {
        "title": "Nevvon Public API",
        "version": "1.1.0",
        "description": "# Introduction\n\nThe Nevvon Public API allows you to manage many aspects of the Nevvon ecosystem.\nThis API documentation begins with an overview of the design and technology that has been implemented, followed by reference information about the specific endpoints\n\n## Requests\n\nThe Nevvon Public API supports any tool that can communicate over standard HTTPS\nrequests. Requests should be made using the HTTPS protocol so that traffic\nis encrypted. \n\n|Method|Usage|\n|--- |--- |\n|GET|GET is used for retrieving information, such as single object or lists of objects|\n|POST|POST is used for creating new objects, or for creating new object relations. The POST request includes all of the attributes necessary to create a new object.|\n|PUT|PUT is used to update an existing object. It sets the state of the target using the provided values, regardless of their current values|\n|DELETE|Delete is used to remove objects|\n\n## HTTP Statuses\nThis API uses standard HTTP statuses to indicate the success and condition of each request.\n\nSuccesfull requests will return 2xx results.\n\nThe 4xx range responses will typically signify errors with data, or ability to operate on the data (such as issues with missing data, or conflicts with existing data, etc.).\n### Example Success Response, Single Object:\n```\n    HTTP/1.1 200 OK\n    {\n        \"data\": {\n            // some data...\n        },\n        \"meta\": { \n            // Additional info on the data, such as pagination\n        }\n    }\n```\n### Example Success Response, List of Objects:\n```\n    HTTP/1.1 200 OK\n    {\n        \"data\": [\n            {\n                // some data, object 1...\n            },\n            {\n                // some data, object 2...\n            },\n            ...\n        ]\n        \"meta\": { \n            // Additional info on the data, such as pagination\n        }\n    }\n```\n### Example Success Response, POST new object:\n```\n    HTTP/1.1 201 Created\n    {\n       \"data\": {\n            // the full object that was created\n        },\n        \"meta\": { \n            // Additional info, if relevant\n        }\n    }\n```\n### Example Error Response:\n```\n    HTTP/1.1 401 Unauthorized\n    {\n        \"message\": \"Unauthorized\",\n        \"meta\": { }\n    }\n```\n\n## Meta\nIn addition to the returned data, there is a `meta` section in each response, optionally containing additional information about the response. Such information can include pagination  information (for list responses), or error information (e.g. which field was missing from the  input).\n\n\n\n## Standard Formats\nThe following are standards used throughout the API and documentation:\n\n\n### Date Formats\nAll date formats are following `ISO 8601` as follows: `YYYY-MM-DD` (See <A href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" target=\"_blank\">ISO-8601</A>).\n\n\n### Date-Time Formats\nWhen returned by the Nevvon API, Date-Time will be of the format `YYYY-MM-DDThh:mm:ssTZD` (e.g. `2012-03-29T10:05:45-05:00`. See examples: <A href=\"https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations\" target=\"_blank\">Wikipedia - ISO</A>). As input, the Nevvon API will recognize the same format, as well as optionally ommiting the TimeZone (e.g. `2012-03-29 10:05:45`). If there is a default TimeZone offset associated with the current account - it will be used to translate the Date-Time. Otherwise, ET (EST/EDT) will be assumed.\n",
        "contact": {
            "name": "Integrations Admin",
            "email": "integrations@nevvon.com"
        },
        "license": {
            "name": "GNU GPLv3",
            "url": "https://www.gnu.org/licenses/gpl.txt"
        },
        "x-logo": {
            "url": "https://www.nevvon.com/wp-content/uploads/2020/11/nevvon_logo_2x.png",
            "backgroundColor": "#FFFFFF",
            "altText": "Nevvon Logo"
        }
    },
    "servers": [
        {
            "url": "https://nevvonapi.nevvon.com",
            "description": "Production server URL"
        }
    ],
    "paths": {
        "/v1/login": {
            "summary": "Create Token",
            "description": "Initial request to obtain an auth `Token`. A Token is needed in all other API requests",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            },
                            "examples": {
                                "Authentication using Client Id And Secret": {
                                    "value": {
                                        "client_id": "t348bff173b12ok36d6d5ab80id",
                                        "client_secret": "69f2c71d25e464fba614e19fcc1430d5b256b7a2"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AuthToken"
                    },
                    "401": {
                        "description": "Incorrect `client_id` and `client_token` combination"
                    }
                },
                "operationId": "login",
                "summary": "Create Token",
                "description": "Initial request to obtain an auth `Token`. A Token is needed in all other API requests"
            }
        },
        "/v1/employees": {
            "summary": "Path used to manage the list of employees .",
            "description": "The REST endpoint/path allows you to get list of `Employee` entities or adding a new `Employee` into an `Organization`. ",
            "get": {
                "tags": [
                    "Employees"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "description": "Allows filtering results by the following employee attributes:\n- `signed_up` *boolean* - employee's sign up status\n- `disciplines` *string* - list of comma separated disciplines that employee is assigned to. Use `None` to filter out all employees that are not assigned to any discipline\n- `location` *string* - Use `None` to filter out employees without any location setting\n- `sub_location` *string* - available for organizations with two level locations\n- `languages` *string* - list of comma separated languages. Use `None` to filter out employees without any language setting\n- `hiring_date` *date string*\n- `status` - *string* - filter by status of employee in the organization",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resp_Employees"
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Employee` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "operationId": "getEmployees",
                "summary": "List All Employees",
                "description": "Gets a list of all `Employee` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `Employee` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Employee"
                            },
                            "examples": {
                                "Create Employee 1": {
                                    "value": {
                                        "first_name": "Alex",
                                        "last_name": "Smith",
                                        "country_code": "+1",
                                        "email": "alex222@gmail.com",
                                        "phone": 4165534545,
                                        "onboard_date": "2021-09-23",
                                        "employer_number": "1046",
                                        "disciplines": "PCA,HHA,PA",
                                        "location": "CA",
                                        "language": "English",
                                        "status": "Active",
                                        "created_datetime": "2018-09-04 12:26:42"
                                    }
                                },
                                "Create Employee 2": {
                                    "value": {
                                        "first_name": "Alex",
                                        "last_name": "Smith",
                                        "country_code": "+1",
                                        "email": "alex222@gmail.com",
                                        "phone": "416-553-4545",
                                        "onboard_date": "2021-09-23",
                                        "employer_number": "1046",
                                        "status": "On Hold"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Employees"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resp_Employee"
                                },
                                "examples": {
                                    "Response 1": {
                                        "value": {
                                            "id": "pr_bbe1525e592411ec8550029b5cccd444",
                                            "first_name": "Alex",
                                            "last_name": "Smith",
                                            "country_code": "+1",
                                            "email": "alex222@gmail.com",
                                            "phone": 4165534545,
                                            "onboard_date": "2021-09-23",
                                            "employer_number": "1046",
                                            "disciplines": "PCA,HHA,PA",
                                            "location": "CA",
                                            "language": "English",
                                            "active": true,
                                            "created_datetime": "2018-09-04 12:26:42"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful response."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Missing field": {
                                        "value": {
                                            "message": "The onboard date field is required.",
                                            "meta": {
                                                "field_name": "onboard_date"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad data"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "`Employee` already exists": {
                                        "value": {
                                            "message": "Employee already exists",
                                            "meta": {
                                                "id": "#long id"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Data conflict, such as provider phone already in use."
                    }
                },
                "operationId": "createEmployee",
                "summary": "Create an Employee",
                "description": "Creates a new instance of a `Employee`."
            }
        },
        "/v1/programs": {
            "summary": "Manage list of programs",
            "description": "This endpoint lists all `Program`s available to `Organization`.",
            "get": {
                "tags": [
                    "Programs"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Program"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Program` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "operationId": "getPrograms",
                "summary": "List All Programs",
                "description": "Gets a list of all `Program` entities."
            }
        },
        "/v1/programs/completion": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "examples": {
                            "Date-Time in ISO 8601 format": {
                                "value": "\"2012-03-29T10:05:45-05:00\""
                            },
                            "Date-Time in ISO 8601 format - account default TimeZone": {
                                "value": "\"2012-03-29T10:05:45\""
                            }
                        },
                        "name": "starting_from",
                        "description": "Return results starting from provided datetime.",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ProgramCompletion"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "summary": "Get all Programs completion details"
            }
        },
        "/v1/programs/{program_id}": {
            "summary": "Path used to retrieve a single Program.",
            "description": "This path provides `Program` detailed information.",
            "get": {
                "tags": [
                    "Programs"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `Program`."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Invalid Program ID": {
                                        "value": {
                                            "message": "Invalid Program ID",
                                            "meta": {

                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad request data"
                    }
                },
                "operationId": "getProgram",
                "summary": "Get a Program",
                "description": "Gets the details of a single instance of a `Program`."
            },
            "parameters": [
                {
                    "name": "program_id",
                    "description": "A unique identifier for a `Program`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/v1/programs/{program_id}/employees": {
            "summary": "Path used to manage the list of employees assigned to programs.",
            "description": "This endpoint lists all `Employee`s assigned to a `Program` or adds a `Employee` to it.",
            "get": {
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "name": "program_id",
                        "description": "A unique identifier for a Program.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Employees"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Invalid Program ID": {
                                        "value": {
                                            "message": "Invalid Program ID",
                                            "meta": {

                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad request data"
                    }
                },
                "operationId": "getEmployeesInProgram",
                "summary": "Lists all Employees assigned to a Program",
                "description": "Gets a list of `Employees` assigned to the `Program`"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EmployeeProgram"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "name": "program_id",
                        "description": "A unique identifier for a Program.",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Program"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "Successfully added Employees to the Program"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Invalid Program ID": {
                                        "value": {
                                            "message": "Invalid Program ID",
                                            "meta": {

                                            }
                                        }
                                    },
                                    "Invalid Employee ID": {
                                        "value": {
                                            "message": "Invalid Employee ID",
                                            "meta": {

                                            }
                                        }
                                    },
                                    "Invalid Date": {
                                        "value": {
                                            "message": "Invalid date valie",
                                            "meta": {
                                                "field_name": "start_date"
                                            }
                                        }
                                    },
                                    "Invalid Duration Method": {
                                        "value": {
                                            "message": "Invalid value for Duration Method",
                                            "meta": {
                                                "field_name": "duration_method"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad request data"
                    }
                },
                "operationId": "addEmployeeToProgram",
                "summary": "Adds Employees to a Program",
                "description": "Adds a list of `Employees` to a `Program`"
            },
            "parameters": [
                {
                    "name": "program_id",
                    "description": "The Program ID",
                    "schema": {
                        "$ref": "#/components/schemas/ID_Program"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/v1/employees/{employee_id}": {
            "summary": "Path used to manage a single Employee.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `Employee`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "tags": [
                    "Employees"
                ],
                "responses": {
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "200": {
                        "$ref": "#/components/responses/Resp_Employee"
                    }
                },
                "operationId": "getEmployee",
                "summary": "Get Employee data",
                "description": "Gets the details of a single instance of a `Employee`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `Employee` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Employee"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Employees"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "Successful response."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Data Out of Range": {
                                        "value": {
                                            "message": "Date range error",
                                            "meta": {
                                                "field_name": "onboard_date"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad request data"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Data Conflict": {
                                        "value": {
                                            "message": "Employee phone already in use",
                                            "meta": {
                                                "field_name": "phone"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Data conflict"
                    }
                },
                "operationId": "updateEmployee",
                "summary": "Update an Employee",
                "description": "Updates an existing `Employee`."
            },
            "parameters": [
                {
                    "name": "employee_id",
                    "description": "A unique identifier for a `Employee`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/v1/programs/{program_id}/completion": {
            "summary": "Returns list of employees that completed program with completion details",
            "get": {
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "examples": {
                            "Date-Time in ISO 8601 format ": {
                                "value": "\"2012-03-29T10:05:45-05:00\""
                            },
                            "Date-Time in ISO 8601 format - account default Time-Zone": {
                                "value": "\"2018-02-10T09:30Z\""
                            }
                        },
                        "name": "starting_from",
                        "description": "Return results starting from provided datetime. Format `YYYY-MM-DDThh:mm:ssTZD`",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "program_id",
                        "description": "A unique identifier for a Program.",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Program"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ProgramCompletion"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "examples": {
                                    "Invalid Program ID": {
                                        "value": {
                                            "message": "Invalid Program ID",
                                            "meta": {

                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad request data"
                    }
                },
                "operationId": "getProgramCompletions",
                "summary": "Get specific Program completion details",
                "description": "Get details of program completion"
            },
            "parameters": [
                {
                    "name": "program_id",
                    "schema": {
                        "$ref": "#/components/schemas/ID_Program"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/v1/programs/{program_id}/employees/{employee_id}": {
            "summary": "Manages employee's program details",
            "description": "Returns employee program information, allows modifying employee program details and removing employee from the program",
            "get": {
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "name": "program_id",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Program"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "examples": {
                            "Employee ID": {
                                "value": "bbe1525e592411ec8550029b5cccd444"
                            }
                        },
                        "name": "employee_id",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Employee"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Employees"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "operationId": "getEmployeeProgram",
                "summary": "Return Program details for an Employee"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeProgram"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "name": "program_id",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Program"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "employee_id",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Employee"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "operationId": "updateEmployeeProgram",
                "summary": "Updates Employee's Program details - including deactivation",
                "description": "Allows updating `start_date`, `due_date` and `active` for `Employee` on the specific `Program`"
            },
            "delete": {
                "tags": [
                    "Programs"
                ],
                "parameters": [
                    {
                        "name": "program_id",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Program"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "employee_id",
                        "schema": {
                            "$ref": "#/components/schemas/ID_Employee"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "operationId": "removeEmployeeFromProgram",
                "summary": "Removes employee from program"
            },
            "parameters": [
                {
                    "name": "program_id",
                    "description": "The `Program` ID",
                    "schema": {
                        "$ref": "#/components/schemas/ID_Program"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "employee_id",
                    "description": "ID of an `Employee` to remove from the `Program`",
                    "schema": {
                        "$ref": "#/components/schemas/ID_Employee"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Credentials": {
                "title": "Root Type for Credentials",
                "description": "",
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "client_secret": {
                        "type": "string"
                    }
                },
                "example": {
                    "client_id": "t348bff173b12ok36d6d5ab80id",
                    "client_secret": "69f2c71d25e464fba614e19fcc1430d5b256b7a2"
                }
            },
            "ProgramCompletion": {
                "title": "Root Type for ProgramCompletion",
                "description": "Represent program completion details (for a specific Employee), including `Employee` information",
                "type": "object",
                "properties": {
                    "program_id": {
                        "description": "`Program` identifier",
                        "type": "string",
                        "example": "\"d44bfbf4597511ec83b9681ca21277e1\""
                    },
                    "completed_datetime": {
                        "format": "date-time",
                        "description": "The date-time when the `Employee` completed their training of the relevant `Program`",
                        "type": "string",
                        "example": "\"2020-10-05T12:56:13-0500\""
                    },
                    "due_date": {
                        "format": "date",
                        "description": "The last day the `Employee` can take this `Program ",
                        "type": "string",
                        "example": "\"2022-03-14\""
                    },
                    "employee_id": {
                        "description": "`Employee` identifier",
                        "type": "string",
                        "example": "\"d058301f597511ec83b9681ca21277e1\""
                    },
                    "approval_datetime": {
                        "format": "date-time",
                        "description": "The date-time when the `Program` completion was approved (typically by someone such as a Registered Nurse)",
                        "type": "string",
                        "example": "\"2020-10-07 14:32:10-0500\""
                    }
                },
                "example": {
                    "employee_id": "D058301f597511ec83b9681ca21277e1",
                    "program_id": "D44bfbf4597511ec83b9681ca21277e1",
                    "completed_datetime": "2020-10-05T12:56:13-0500",
                    "due_date": "2020-11-01",
                    "approval_datetime": "2020-10-07 14:32:10-0500"
                }
            },
            "Employee": {
                "title": "Root Type for Provider",
                "description": "Employee represent the end-user - the person using the system to take their learning.",
                "required": [
                    "phone",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "N`evvon`'s auto-generated Employee ID",
                        "type": "string",
                        "readOnly": true,
                        "example": "bbe1525e592411ec8550029b5cccd444"
                    },
                    "first_name": {
                        "description": "`Employee`'s First Name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "`Employee`'s Last Name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone": {
                        "description": "`Employee`'s phone number. Will be used in Nevvon to locate employees.\nCan be supplied with additional helper characters (e.g. \"(212) 555-1234\") or stripped down (e.g. \"2125551234\").\nNevvon will always strip down the number",
                        "type": "string",
                        "example": "212-555-1234"
                    },
                    "onboard_date": {
                        "format": "date",
                        "description": "`Employee`'s \"On-Board Date\" - or \"Hire Date\" (YYYY-MM-DD)",
                        "type": "string",
                        "example": "2021-09-13"
                    },
                    "created_datetime": {
                        "format": "date-time",
                        "description": "The timestamp of when the `Employee` record was created. YYYY-MM-DD HH:mm:ss",
                        "type": "string",
                        "readOnly": true,
                        "example": "2018-09-04 12:26:42"
                    },
                    "email": {
                        "description": "`Email` address used by the `Employee`. Will be used to create the Employee sign-in info",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "country_code": {
                        "description": "Country code for phone number",
                        "type": "string",
                        "example": "+1"
                    },
                    "disciplines": {
                        "description": "List of `Disciplines`",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "HHA,PCA,PA"
                    },
                    "location": {
                        "description": "`Employee`'s Location - this can later be used in Nevvon's dashboards to filter, apply rules, etc.",
                        "type": "string",
                        "example": "North-East office"
                    },
                    "language": {
                        "description": "The `Employee`'s preferred spoken language.\nValid values are either 2-Letter or 3-letter codes.\nE.g.:\n\"Mandarin\" : \"`ZH`\" / \"`ZHO`\"; \n\"English\" :  \"`EN`\" / \"`ENG`\"; \n\"Haitian Creole\" : \"`HT`\" / \"`HAT`\"; \n\"Korean\" : \"`KO`\" / \"`KOR`\"; \n\"Polish\" : \"`PL`\" / \"`POL`\"; \n\"Russian\" : \"`RU`\" / \"`RUS`\"; \n\"Spanish\" : \"`ES`\" / \"`SPA`\"; \n\"Cantonese\" : \"`CN`\" / \"`YUE`\"",
                        "type": "string",
                        "example": "EN"
                    },
                    "employee_number": {
                        "description": "An additional identifier used by 3rd party system (e.g. Partner System ID), like \"Employee ID\", \"Employee Code\", etc.\nThis will be displayed in the Nevvon dashbaord and can also be used to run searches. ",
                        "type": "string",
                        "example": "ABC-1234"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EmployeeStatus",
                        "description": "Current status of `Employee`",
                        "example": "\"Active\",\n\"On Hold\""
                    }
                },
                "example": {
                    "id": "bbe1525e592411ec8550029b5cccd444",
                    "first_name": "Alex",
                    "last_name": "Smith",
                    "country_code": "+1",
                    "email": "alex222@gmail.com",
                    "phone": "416-553-4545",
                    "onboard_date": "2021-09-23",
                    "employer_number": "ABB-1046",
                    "disciplines": "PCA,HHA,PA",
                    "location": "CA",
                    "language": "English",
                    "status": "On Hold",
                    "created_datetime": "2018-09-04 12:26:42"
                }
            },
            "EmployeeStatus": {
                "description": "ProvierStatus",
                "type": "string",
                "example": "\"Active\", \"On Hold\", \"Inactive\""
            },
            "ErrorResponse": {
                "title": "Root Type for ErrorResponse",
                "description": "Typical response for errors. \nThe HTTP Status Code code should be the main indicator for the issue.\nThe `message` section will include verbal information about the failure.\nThe `meta` section can include additional information, such as specifics (e.g. the name of the field that had the issue).",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "Plain-text information about the nature of the failure",
                        "type": "string",
                        "example": "The onboard date field is required"
                    },
                    "meta": {
                        "description": "Additional, more specific, information about the nature of the failure",
                        "type": "object",
                        "properties": {
                            "field_name": {
                                "type": "string"
                            }
                        },
                        "example": "\"field_name\": \"onboard_date\""
                    }
                },
                "example": {
                    "message": "The onboard date field is required.",
                    "meta": {
                        "field_name": "onboard_date"
                    }
                }
            },
            "SuccessResponse": {
                "title": "Root Type for SuccessResponse",
                "description": "Typical structure of response for successfull requests.\nThe main response data is in `data` section, and additional \"meta\" info into `meta` section (for example, pagination info).\nThe `data` section is either a dictionary (`{...}` - in case of single object) or an array (`[...]` - in case of list of objects).",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "The object with the response data",
                        "type": "string"
                    },
                    "meta": {
                        "type": "object"
                    }
                },
                "example": {
                    "data": {

                    },
                    "meta": {

                    }
                }
            },
            "AuthorizationToken": {
                "title": "Root Type for AuthorisationToken",
                "description": "",
                "type": "object",
                "properties": {
                    "token": {
                        "description": "Authentication `Token` to use in subsequent API calls",
                        "type": "string"
                    },
                    "expiration": {
                        "format": "date-time",
                        "description": "Expiration time for the returned token",
                        "type": "string",
                        "example": "2022-12-09 19:45:52"
                    }
                },
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJpWEtweXU2QmtzcWI0MHZNa3VSUVF3PT0iLCJpYXQiOjE1MTY2NDM4OTAsInN1YiI6IntcInVzZXJJZFwiOlwiaVhLcHl1NkJrc3FiNDB2TWt1UlFRd1xcdTAwM2RcXHUwMDNkXCIsXCJsYXN0TW9kaWZpZWRcIjoxMjA0ODI0OTYxMDAwLFwiY29tcGFueUlkXCI6XCJkb3RjbXMub3JnXCJ9IiwiaXNzIjoiaVhLcHl1NkJrc3FiNDB2TWt1UlFRdz09IiwiZXhwIjoxNTE3NTA3ODkwfQ.KG0dDXgJdZDA6Bd77bTQjH1iKw_LY-AixN4dALAnRgQ",
                    "expiration": "2022-12-09 19:45:52"
                }
            },
            "EmployeeProgram": {
                "title": "Root Type for EmployeeProgram",
                "description": "",
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "string",
                        "example": "'bbe1525e592411ec8550029b5cccd444'"
                    },
                    "start_date": {
                        "format": "date",
                        "description": "The `Employee` will not have access to the Program before this date.\nFormat: `YYYY-MM-DD`",
                        "type": "string",
                        "example": "2022-03-19"
                    },
                    "duration_method": {
                        "description": "One of: [`'jan-dec'`, `'onboard_anniv'`, `'custom'`, `'numdays_from_start'`]",
                        "type": "string",
                        "example": "\"jan-dec\""
                    },
                    "due_date": {
                        "format": "date",
                        "description": "The `Employee` has to complete training before this date.\nFormat: `YYYY-MM-DD`",
                        "type": "string",
                        "example": "'2022-12-13'"
                    }
                },
                "example": {
                    "employee_id": "bbe1525e592411ec8550029b5cccd444",
                    "start_date": "2022-03-14",
                    "duration_method": "custom",
                    "due_date": "2022-09-30"
                }
            },
            "SuccessResponseArray": {
                "title": "Root Type for SuccessResponse",
                "description": "Typical structure of response for successfull requests.\nThe main response data is in `data` section, and additional \"meta\" info into `meta` section (for example, pagination info).\nThe `data` section is either a dictionary (`{...}` - in case of single object) or an array (`[...]` - in case of list of objects).",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "Array of object of the response",
                        "type": "array",
                        "items": {

                        }
                    },
                    "meta": {
                        "type": "object"
                    }
                },
                "example": "{\n    \"data\": [],\n    \"meta\": {\n        // pagination info\n    }\n}"
            },
            "Resp_Employee": {
                "description": "test",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Employee",
                        "description": "Main data object"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta_Single",
                        "description": "Meta data about the response"
                    }
                },
                "example": {
                    "data": {
                        "id": "bbe1525e592411ec8550029b5cccd444",
                        "first_name": "Alex",
                        "last_name": "Smith",
                        "country_code": "+1",
                        "email": "alex222@gmail.com",
                        "phone": "416-553-4545",
                        "onboard_date": "2021-09-23",
                        "employer_number": "ABB-1046",
                        "disciplines": "PCA,HHA,PA",
                        "location": "CA",
                        "language": "English",
                        "status": "On Hold",
                        "created_datetime": "2018-09-04 12:26:42"
                    },
                    "meta": {

                    }
                }
            },
            "Meta_Pagination": {
                "description": "",
                "type": "object",
                "example": {
                    "next_page": "http://...",
                    "prev_page": "http://...",
                    "pages": 4
                }
            },
            "Meta_Single": {
                "description": "",
                "type": "object",
                "example": {
                    "What goes here?": ""
                }
            },
            "ID_Employee": {
                "description": "The ID of an `Employee`",
                "type": "string",
                "example": "\"bbe1525e592411ec8550029b5cccd444\""
            },
            "ID_Program": {
                "description": "The ID of a `Program`",
                "type": "string",
                "example": "\"abe1525e592411ec8550029b5cd72\""
            },
            "Resp_Employees": {
                "description": "Array of `Employees` data",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "The main data returned",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Employee"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta_Pagination",
                        "description": "Meta data"
                    }
                },
                "example": {
                    "data": [
                        {
                            "id": "bbe1525e592411ec8550029b5cccd444",
                            "first_name": "Alex",
                            "last_name": "Smith",
                            "country_code": "+1",
                            "email": "alex222@gmail.com",
                            "phone": "416-553-4545",
                            "onboard_date": "2021-09-23",
                            "employer_number": "ABB-1046",
                            "disciplines": "PCA,HHA,PA",
                            "location": "CA",
                            "language": "English",
                            "status": "On Hold",
                            "created_datetime": "2018-09-04 12:26:42"
                        },
                        {

                        }
                    ],
                    "meta": {
                        "bar": "sss"
                    }
                }
            },
            "Program": {
                "title": "Root Type for Program",
                "description": "A `Program` object. Programs are the high-level learning containers - sometimes referred to as \"Courses\" too.\nPrograms in Nevvon will typically contain Modules (which are equivalent to a \"topic\"), and Modules in turn include Lessons (typically of length of 5-6 minutes - covering one particalur subject).",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Internal `Program` id",
                        "type": "string",
                        "readOnly": true,
                        "example": "ba9be277597311ec83b9681ca21277e1"
                    },
                    "name": {
                        "description": "`Program` name",
                        "type": "string",
                        "example": "COVID-19 Safety"
                    },
                    "description": {
                        "description": "`Program` description",
                        "type": "string",
                        "example": "COVID-19 Safety Protocols"
                    },
                    "image": {
                        "description": "`Program` image file",
                        "type": "string",
                        "example": "https://www.example.com/media/program1.jpg"
                    },
                    "created_datetime": {
                        "format": "date-time",
                        "description": "Date-time when the Program was created (YYYY-MM-DD HH:mm:ss)",
                        "type": "string",
                        "example": "2021-12-13 18:33:12"
                    },
                    "duration": {
                        "description": "`Program` duration in seconds",
                        "type": "integer",
                        "readOnly": false,
                        "example": "3600"
                    }
                },
                "example": {
                    "id": "ba9be277597311ec83b9681ca21277e1",
                    "name": "COVID-19 Safety",
                    "description": "COVID-19 Safety Protocols",
                    "image": "http://cdn.nevvon.com/pg/ba9be277597311ec83b9681ca21277e1.png",
                    "created_datetime": "2020-03-16 14:47:49",
                    "duration": 2790
                }
            }
        },
        "responses": {
            "success": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SuccessResponse"
                        }
                    }
                },
                "description": ""
            },
            "AuthToken": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AuthorizationToken"
                        }
                    }
                },
                "description": ""
            },
            "ProgramCompletion": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ProgramCompletion"
                            }
                        }
                    }
                },
                "description": ""
            },
            "Unauthorized": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        },
                        "examples": {
                            "Unauthorized": {
                                "value": {
                                    "message": "Unauthorized",
                                    "meta": {

                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Unauthorized"
            },
            "Employees": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Employee"
                            }
                        }
                    }
                },
                "description": ""
            },
            "Resp_Employee": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Resp_Employee"
                        }
                    }
                },
                "description": ""
            },
            "Resp_Employees": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Resp_Employees"
                        }
                    }
                },
                "description": ""
            }
        },
        "securitySchemes": {
            "NevvonAPIAuth": {
                "scheme": "bearer",
                "type": "http",
                "description": "## OAuth Authentication\n\nIn order to communicate and interact with the Nevvon Public API, you will need to authenticate.\n\nFirst you will need to obtain a pair of `client_id` and `client_secret`.\nThen you will use that data in the `/login` endpoint to obtain a `Bearer token`.\n\nYou will need to supply the token under the `Authorization` header in each subsequent API call."
            }
        }
    },
    "security": [
        {
            "NevvonAPIAuth": [
            ]
        }
    ]
}